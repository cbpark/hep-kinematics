cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.33.0.
--
-- see: https://github.com/sol/hpack
--
-- hash: 749c051206a788f27b21475da707291987fbec759a5da9dc9af581d4f0e841f5

name:           hep-utilities
version:        0.1.0.0
synopsis:       Utilities for analyzing high energy physics data
description:    Types and functions for various vectors, kinematics variables, and utilities for collider studies
category:       Data, Physics
homepage:       https://github.com/cbpark/hep-utilities#readme
bug-reports:    https://github.com/cbpark/hep-utilities/issues
author:         Chan Beom Park
maintainer:     cbpark@gmail.com
copyright:      (c) 2014-2020 Chan Beom Park
license:        BSD3
license-file:   LICENSE
build-type:     Simple

source-repository head
  type: git
  location: https://github.com/cbpark/hep-utilities

flag devel
  description: Create small test executables
  manual: True
  default: False

library
  exposed-modules:
      HEP.Analysis.Histogram1D
      HEP.Data.HepMC
      HEP.Data.HepMC.Parser
      HEP.Data.HepMC.PipesUtil
      HEP.Data.HepMC.Type
      HEP.Data.LHCO
      HEP.Data.LHCO.Parser
      HEP.Data.LHCO.PipesUtil
      HEP.Data.LHCO.Type
      HEP.Data.LHEF
      HEP.Data.LHEF.Parser
      HEP.Data.LHEF.PipesUtil
      HEP.Data.LHEF.Type
      HEP.Kinematics
      HEP.Kinematics.TwoBody
      HEP.Kinematics.Variable
      HEP.Kinematics.Vector.LorentzTVector
      HEP.Kinematics.Vector.LorentzVector
      HEP.Kinematics.Vector.ThreeVector
      HEP.Kinematics.Vector.TwoVector
      HEP.Particle.ID
  other-modules:
      HEP.Data.ParserUtil
      HEP.Kinematics.Variable.Antler
      HEP.Kinematics.Variable.Internal
      HEP.Kinematics.Variable.MAOS
      HEP.Kinematics.Variable.MT2
      HEP.Kinematics.Variable.MTLowerAndUpper
      HEP.Util
      HEP.Util.Matrix
      HEP.Util.Polynomial
  hs-source-dirs:
      src
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields -fno-warn-unused-do-bind
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , containers
    , hmatrix-gsl
    , lens
    , linear
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
    , vector
  default-language: Haskell2010

executable hepmc_parse
  main-is: hepmc_parse.hs
  other-modules:
      Paths_hep_utilities
  hs-source-dirs:
      examples
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , hep-utilities
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
  if flag(devel)
    buildable: True
  else
    buildable: False
  default-language: Haskell2010

executable hepmc_pipesparse
  main-is: hepmc_pipesparse.hs
  other-modules:
      Paths_hep_utilities
  hs-source-dirs:
      examples
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , hep-utilities
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
  if flag(devel)
    buildable: True
  else
    buildable: False
  default-language: Haskell2010

executable lhco_parse
  main-is: lhco_parse.hs
  other-modules:
      Paths_hep_utilities
  hs-source-dirs:
      examples
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , hep-utilities
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
  if flag(devel)
    buildable: True
  else
    buildable: False
  default-language: Haskell2010

executable lhco_pipesparse
  main-is: lhco_pipesparse.hs
  other-modules:
      Paths_hep_utilities
  hs-source-dirs:
      examples
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , hep-utilities
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
  if flag(devel)
    buildable: True
  else
    buildable: False
  default-language: Haskell2010

executable lhef_parse
  main-is: lhef_parse.hs
  other-modules:
      Paths_hep_utilities
  hs-source-dirs:
      examples
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , hep-utilities
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
  if flag(devel)
    buildable: True
  else
    buildable: False
  default-language: Haskell2010

executable lhef_pipesparse
  main-is: lhef_pipesparse.hs
  other-modules:
      Paths_hep_utilities
  hs-source-dirs:
      examples
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , hep-utilities
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
  if flag(devel)
    buildable: True
  else
    buildable: False
  default-language: Haskell2010

executable mat
  main-is: mat.hs
  other-modules:
      Paths_hep_utilities
  hs-source-dirs:
      examples
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , hep-utilities
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
  if flag(devel)
    buildable: True
  else
    buildable: False
  default-language: Haskell2010

executable mt2
  main-is: mt2.hs
  other-modules:
      Paths_hep_utilities
  hs-source-dirs:
      examples
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , hep-utilities
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
  if flag(devel)
    buildable: True
  else
    buildable: False
  default-language: Haskell2010

executable mtbound
  main-is: mtbound.hs
  other-modules:
      Paths_hep_utilities
  hs-source-dirs:
      examples
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , hep-utilities
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
  if flag(devel)
    buildable: True
  else
    buildable: False
  default-language: Haskell2010

executable twobody
  main-is: twobody.hs
  other-modules:
      Paths_hep_utilities
  hs-source-dirs:
      examples
  ghc-options: -Wall -Wcompat -O2 -funbox-strict-fields
  build-depends:
      attoparsec
    , base >=4.12.0.0 && <5
    , bytestring
    , hep-utilities
    , mwc-random
    , pipes
    , pipes-attoparsec
    , pipes-bytestring
    , transformers
  if flag(devel)
    buildable: True
  else
    buildable: False
  default-language: Haskell2010
